name: Deploy Nuxt site to Pages

on:
    push:
        branches: ["main"]
    workflow_dispatch:

permissions:
    contents: read
    pages: write
    id-token: write

concurrency:
    group: "pages"
    cancel-in-progress: false

env:
    NODE_ENV: production
    NUXT_APP_BASE_URL: ${{ vars.NUXT_APP_BASE_URL || '/' }}

jobs:
    build:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Detect package manager
              id: detect-package-manager
              run: |
                  if [ -f "${{ github.workspace }}/yarn.lock" ]; then
                    echo "manager=yarn" >> $GITHUB_OUTPUT
                    echo "command=install" >> $GITHUB_OUTPUT
                    echo "runner=yarn" >> $GITHUB_OUTPUT
                    exit 0
                  elif [ -f "${{ github.workspace }}/package.json" ]; then
                    echo "manager=npm" >> $GITHUB_OUTPUT
                    echo "command=ci" >> $GITHUB_OUTPUT
                    echo "runner=npx --no-install" >> $GITHUB_OUTPUT
                    exit 0
                  else
                    echo "Unable to determine package manager"
                    exit 1
                  fi

            - name: Setup Node
              uses: actions/setup-node@v4
              with:
                  node-version: "22"
                  cache: ${{ steps.detect-package-manager.outputs.manager }}

            - name: Install dependencies
              run: ${{ steps.detect-package-manager.outputs.manager }} ${{ steps.detect-package-manager.outputs.command }}

            - name: Lint code
              run: ${{ steps.detect-package-manager.outputs.manager }} run lint
              continue-on-error: true

            - name: Type check
              run: ${{ steps.detect-package-manager.outputs.manager }} run typecheck
              continue-on-error: true

            - name: Build for production
              run: ${{ steps.detect-package-manager.outputs.manager }} run build
              env:
                  NITRO_PRESET: github_pages

            - name: Upload artifact
              uses: actions/upload-pages-artifact@v3
              with:
                  path: ./.output/public

    deploy:
        environment:
            name: github-pages
            url: ${{ steps.deployment.outputs.page_url }}
        runs-on: ubuntu-latest
        permissions:
            pages: write # to deploy to Pages
            id-token: write
        needs: build
        steps:
            - name: Deploy to GitHub Pages
              id: deployment
              uses: actions/deploy-pages@v4
